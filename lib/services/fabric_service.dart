import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';
import '../models/fabric.dart';
import '../models/transaction.dart';

class FabricService with ChangeNotifier {
  final FirebaseFirestore _firestore = FirebaseFirestore.instance;

  // üü¢ L·∫•y d·ªØ li·ªáu m·∫´u v·∫£i theo ID
  Future<Fabric?> getFabricById(String fabricId) async {
    try {
      DocumentSnapshot doc = await _firestore.collection('fabrics').doc(fabricId).get();
      if (doc.exists && doc.data() != null) {
        return Fabric.fromFirestore(doc.data() as Map<String, dynamic>, doc.id);
      } else {
        debugPrint("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y m·∫´u v·∫£i v·ªõi ID: $fabricId");
      }
    } catch (e) {
      debugPrint("‚ùå L·ªói khi l·∫•y m·∫´u v·∫£i: $e");
    }
    return null;
  }

  // üü¢ L·∫•y t·∫•t c·∫£ m·∫´u v·∫£i
  Stream<List<Fabric>> getFabrics() {
    return _firestore.collection('fabrics').snapshots().map(
          (snapshot) {
        List<Fabric> fabrics = [];
        snapshot.docs.forEach((doc) {
          fabrics.add(Fabric.fromFirestore(doc.data() as Map<String, dynamic>, doc.id));
        });

        // Ki·ªÉm tra c·∫£nh b√°o t·ªìn kho th·∫•p
        for (var fabric in fabrics) {
          if (fabric.quantity < 10) {
            // C·∫£nh b√°o t·ªìn kho th·∫•p
            WidgetsBinding.instance?.addPostFrameCallback((_) {
              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(content: Text('${fabric.name} s·∫Øp h·∫øt h√†ng!')),
              );
            });
          }
        }
        return fabrics;
      },
    );
  }

  // üü¢ Th√™m giao d·ªãch
  Future<void> addTransaction(Transaction transaction, BuildContext context) async {
    try {
      await _firestore.collection('transactions').add(transaction.toFirestore());

      // Th√¥ng b√°o khi c√≥ giao d·ªãch m·ªõi
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(
          content: Text('Giao d·ªãch ${transaction.transactionType} th√†nh c√¥ng!'),
          backgroundColor: transaction.transactionType == 'import' ? Colors.green : Colors.orange,
        ),
      );
    } catch (e) {
      debugPrint("‚ùå L·ªói khi th√™m giao d·ªãch: $e");
    }
  }

  // üü¢ X√≥a m·∫´u v·∫£i
  Future<void> deleteFabric(String fabricId) async {
    try {
      await _firestore.collection('fabrics').doc(fabricId).delete();
      debugPrint("‚úÖ M·∫´u v·∫£i ƒë√£ ƒë∆∞·ª£c x√≥a th√†nh c√¥ng!");
    } catch (e) {
      debugPrint("‚ùå L·ªói khi x√≥a m·∫´u v·∫£i: $e");
    }
  }

}

